name: Run Tests

on:
  pull_request:
    branches: [ master ]
  push:
    branches:
    - master

jobs:
  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Unit Test
      run: ./scripts/unit.sh

  package-artifact:
    name: Package Artifact
    runs-on: ubuntu-latest
    needs: unit
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: Create new release version
      run: |
        export NEW_VERSION="$(./.github/utils/bump_patch.sh $(git describe --tags `git rev-list --tags --max-count=1`))"
        echo "::set-env name=NEW_VERSION::$NEW_VERSION"

    - name: Create new release version
      run: |
        export ARTIFACT_NAME="artifact-$(git rev-parse HEAD)"
        echo "::set-env name=ARTIFACT_NAME::$ARTIFACT_NAME"

    - name: package
      run: PACKAGE_DIR="$ARTIFACT_NAME" ./scripts/package.sh -a -v ${{ env.NEW_VERSION }}

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: package-artifact
    steps:
    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: Integration Test
      run: ./scripts/integration.sh
      env:
        GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: paketo-buildpacks
        APPLICATION_CREDENTIALS: ${{ secrets.gcloud_access_key }}
        CLI: gsutil
      with:
        args: cp "$ARTIFACT_NAME" gs://artifacts.paketo-buildpacks.appspot.com/pr-artifacts/go-compiler/
