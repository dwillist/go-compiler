name: Create Release


jobs:
  create-release-artifact:
    name: Create Release Artifact
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: Create new release version
      run: |
        export NEW_VERSION="$(./.github/utils/bump_patch.sh $(git describe --tags `git rev-list --tags --max-count=1`))"
        echo "::set-env name=NEW_VERSION::$NEW_VERSION"

    - name: package
      run: PACKAGE_DIR=artifact ./scripts/package.sh -a -v ${{ env.NEW_VERSION }}


    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ env.NEW_VERSION }}
        #release_name: Release ${{ github.ref }}
        release_name: Release ${{ env.NEW_VERSION }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./artifact.tgz
        asset_name: artifact-0.0.122.tgz
        asset_content_type: application/gzip


